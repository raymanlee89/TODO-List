{"version":3,"sources":["components/Header.js","components/Item.js","components/List.js","components/Inputbox.js","components/ClearCompletedButton.js","components/Footer.js","containers/TodoApp.js","index.js"],"names":["text","className","Item","onSwitch","props","onItemChange","item","style","checked","this","done_or_not","textDecoration","opacity","id","type","onChange","htmlFor","content","alt","src","onClick","onItemDelete","Component","List","bind","ItemArray","items","map","i","Inputbox","inputValue","inputChange","inputSubmit","onKeyPress","value","placeholder","ClearCompletedButton","undone_count","clearCompleted","Footer","changeShownType","setState","border","state","item_count","TodoApp","onSubmit","event","key","tempItems","push","onInputChange","target","console","log","temp_items","index","indexOf","splice","filter","shownItems","length","Header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbfa38c5.chunk.js","sourcesContent":["import React from \"react\";\nexport default ({ text }) => (\n    <header className=\"todo-app__header\">\n        <h1 className=\"todo-app__title\">{text}</h1>\n    </header>\n)\n","import React, { Component } from \"react\";\r\n\r\nclass Item extends Component {\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    onSwitch = () => {\r\n        this.props.onItemChange(this.props.item);\r\n    }\r\n\r\n    render(){\r\n        let style = {};\r\n        let checked = false;\r\n        if(this.props.item.done_or_not){\r\n            style = {textDecoration: \"line-through\", opacity: 0.5};\r\n            checked = true;\r\n        }\r\n        return(\r\n            <li className=\"todo-app__item\">\r\n                <div className=\"todo-app__checkbox\">\r\n                    <input id={this.props.id} type='checkbox' onChange={this.onSwitch} checked={checked}/>\r\n                    <label htmlFor={this.props.id}/>\r\n                </div>\r\n                <h1 className=\"todo-app__item-detail\" style={style}>{this.props.item.content}</h1>\r\n                <img alt=\"\" src=\"./img/x.png\" className=\"todo-app__item-x\" onClick={() => this.props.onItemDelete(this.props.item)}/>\r\n             </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Item;","import React, { Component } from \"react\";\r\nimport Item from \"./Item\";\r\n\r\nclass List extends Component{\r\n    constructor() {\r\n        super();\r\n        this.onItemChange = this.onItemChange.bind(this);\r\n        this.onItemDelete = this.onItemDelete.bind(this);\r\n    }\r\n\r\n    onItemChange(item) {\r\n        this.props.onItemChange(item);\r\n    }\r\n    \r\n    onItemDelete(item) {\r\n        this.props.onItemDelete(item);\r\n    }\r\n\r\n    render(){\r\n        // console.log(\"List\");\r\n        // console.log(this.props.items);\r\n        const ItemArray = this.props.items.map((item, i)=>{\r\n            return <Item key={i} item={item} id={i} onItemChange={this.onItemChange} onItemDelete={this.onItemDelete}/>;\r\n        });\r\n        return(\r\n            <ul className=\"todo-app__list\" id=\"todo-list\">\r\n                 {ItemArray}\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default List;","import React from 'react';\r\n\r\nfunction Inputbox({inputValue, inputChange, inputSubmit}){\r\n    return (\r\n        <input \r\n            className=\"todo-app__input\" \r\n            onKeyPress={inputSubmit}\r\n            onChange={inputChange}\r\n            value={inputValue}\r\n            placeholder=\"What needs to be done?\"\r\n        />\r\n    );\r\n}\r\n\r\nexport default Inputbox;","import React from 'react';\r\n\r\nfunction ClearCompletedButton({undone_count, clearCompleted}){\r\n    if(undone_count === 0){\r\n        return (\r\n            null\r\n        );\r\n    }else{\r\n        return (\r\n            <div className=\"todo-app__clean\">\r\n                <button onClick={clearCompleted}>Clear completed</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClearCompletedButton;","import React, { Component } from \"react\";\r\nimport ClearCompletedButton from \"../components/ClearCompletedButton\";\r\n\r\nclass Footer extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            style: [{border:\"3px orange double\"}, {}, {}]\r\n        }\r\n    }\r\n\r\n    clearCompleted = () => {\r\n        this.props.clearCompleted();\r\n    }\r\n\r\n    changeShownType = (type) => {\r\n        if(type === \"Active\"){\r\n            this.setState({style: [{}, {border:\"3px orange double\"}, {}]});\r\n        }else if(type === \"Completed\"){\r\n            this.setState({style: [{}, {}, {border:\"3px orange double\"}]});\r\n        }else{\r\n            this.setState({style: [{border:\"3px orange double\"}, {}, {}]});\r\n        }\r\n        this.props.changeShownType(type);\r\n    }\r\n\r\n    render(){\r\n        if(this.props.item_count === 0){\r\n            return(\r\n                <div></div>\r\n            );\r\n        }else{\r\n            return(\r\n                <footer className=\"todo-app__footer\" id=\"todo-footer\">\r\n                    <div className=\"todo-app__total\">{this.props.item_count - this.props.undone_count} left</div>\r\n                    <ul className=\"todo-app__view-buttons\">\r\n                        <button onClick={() => this.changeShownType(\"All\")} style={this.state.style[0]}>All</button>\r\n                        <button onClick={() => this.changeShownType(\"Active\")} style={this.state.style[1]}>Active</button>\r\n                        <button onClick={() => this.changeShownType(\"Completed\")} style={this.state.style[2]}>Completed</button>\r\n                    </ul>\r\n                    <ClearCompletedButton undone_count={this.props.undone_count} clearCompleted={this.clearCompleted}/>\r\n                </footer>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport List from \"../components/List\";\nimport Inputbox from \"../components/Inputbox\";\nimport Footer from \"../components/Footer\";\n\nclass TodoApp extends Component {\n    constructor() {\n        super();\n        this.state = {\n            items: [],\n            type: \"All\",\n            inputValue: \"\",\n        };\n    }\n\n    onSubmit = (event) => {\n        if(event.key === 'Enter' && this.state.inputValue !== \"\")\n        {\n            let tempItems = [...this.state.items];\n            tempItems.push({content: this.state.inputValue, done_or_not: false});\n            this.setState({items: tempItems, inputValue: \"\"});\n        }\n    }\n\n    onInputChange = (event) => {\n        this.setState({inputValue: event.target.value});\n    }\n\n    onItemChange = (item) => {\n        console.log(item.content);\n        let temp_items = [...this.state.items];\n        let index = temp_items.indexOf(item);\n        temp_items[index].done_or_not = !item.done_or_not;\n        this.setState({items: temp_items});\n    }\n\n    onItemDelete = (item) => {\n        console.log(item.content);\n        let temp_items = [...this.state.items];\n        let index = temp_items.indexOf(item);\n        temp_items.splice(index, 1);\n        this.setState({items: temp_items});\n    }\n\n    changeShownType = (type) => {\n        this.setState({type: type});\n    }\n\n    clearCompleted = () => {\n        let temp_items = [...this.state.items];\n        temp_items = temp_items.filter(item => !item.done_or_not);\n        this.setState({items: temp_items});\n    }\n\n    render() {\n        let shownItems = [];\n        if(this.state.type === \"Active\"){\n            shownItems = this.state.items.filter(item => !item.done_or_not);\n        }else if(this.state.type === \"Completed\"){\n            shownItems = this.state.items.filter(item => item.done_or_not);\n        }else{\n            shownItems = this.state.items;\n        }\n        console.log(\"App\");\n        console.log(this.state.items);\n        const undone_count = this.state.items.filter(item => item.done_or_not).length;\n        return (\n            <div id=\"root\" className=\"todo-app__root\">\n                <Header text=\"todos\" />\n                <section className=\"todo-app__main\">\n                    <Inputbox inputValue={this.state.inputValue} inputChange={this.onInputChange} inputSubmit={this.onSubmit}/>\n                    <List items = {shownItems} onItemChange = {this.onItemChange} onItemDelete = {this.onItemDelete}/>\n                </section>\n                <Footer undone_count={undone_count} item_count={this.state.items.length} changeShownType={this.changeShownType} clearCompleted={this.clearCompleted}/>\n            </div>\n        );\n    }\n}\n\nexport default TodoApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport TodoApp from \"./containers/TodoApp\";\n\nReactDOM.render(\n    <TodoApp className=\"todo-app__root\" />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}